<Page
    x:Class="Miriot.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="using:Miriot.Controls"
    RequestedTheme="Dark"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media"
    mc:Ignorable="d">

    <Page.DataContext>
        <Binding Path="MainViewModel" Source="{StaticResource Locator}"/>
    </Page.DataContext>

    <Page.Resources>
        <Storyboard x:Name="InternetIndicatorFadeSb">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                           Storyboard.TargetName="InternetIndicator"
                                           RepeatBehavior="Forever"
                                           AutoReverse="True">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="UserPictureSb">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="UserPicture">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="UserPicture">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="ToothbrushungSb">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="UserPicture">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="UserPicture">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Page.Resources>

    <Grid x:Name="MainGrid" Background="{StaticResource Accent2Brush}" SizeChanged="MainGrid_SizeChanged">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonState">
                <VisualStateGroup.Transitions>
                    <VisualTransition From="*" GeneratedDuration="0" To="ActiveState"/>
                    <VisualTransition From="*" GeneratedDuration="0" To="PassiveState"/>
                    <VisualTransition From="*" GeneratedDuration="0" To="InactiveState"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Active">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind Vm.CurrentState, Mode=OneWay, Converter={StaticResource StateToBoolConverter}, ConverterParameter=0}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ActionPanel">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InfoUnknownPanel">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Passive">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ActionPanel">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InfoUnknownPanel">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Inactive">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ActionPanel">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InfoUnknownPanel">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <MediaElement x:Name="MediaElementCtrl"/>

        <!-- This element hosts the Visuals. Lays out below the Pivot in z-order within the same Grid cell -->
        <Rectangle x:Name="HostForVisual" Fill="Transparent"/>

        <!--Camera control-->
        <ctrl:CameraControl x:Name="Camera" ShowPreview="False"/>
        
        <!--Widget zone-->
        <Grid x:Name="WidgetZone" 
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ChildrenTransitions>
                <TransitionCollection>
                    <AddDeleteThemeTransition/>
                </TransitionCollection>
            </Grid.ChildrenTransitions>
            <Grid.RowDefinitions>
                <RowDefinition Height=".6*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height=".6*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="1.4*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <!--<ctrl:WidgetDeezer Grid.Column="0"></ctrl:WidgetDeezer>
            <ctrl:WidgetCalendar Grid.Column="0"
                                 Grid.RowSpan="2"
                                 Grid.Row="1"></ctrl:WidgetCalendar>
            <ctrl:WidgetSncf Grid.Column="2" Grid.Row="1"></ctrl:WidgetSncf>-->
            <!--<ctrl:WidgetTime Grid.Column="2"
                             Canvas.ZIndex="2"></ctrl:WidgetTime>-->
            <!--<ctrl:WidgetWeather Grid.Column="2" Grid.Row="2"></ctrl:WidgetWeather>
            <ctrl:WidgetTwitter Grid.Column="1" Grid.Row="1"></ctrl:WidgetTwitter>-->
        </Grid>

        <!--Welcome text-->
        <StackPanel Margin="0,10"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom" >
            <TextBlock FontWeight="Light"
                       HorizontalAlignment="Center"
                       TextWrapping="WrapWholeWords"
                       Text="{x:Bind Vm.Title, Mode=OneWay}"
                       FontSize="35"/>
            <TextBlock FontWeight="Light"
                       HorizontalAlignment="Center"
                       TextWrapping="WrapWholeWords"
                       FontSize="20"
                       Text="{x:Bind Vm.SubTitle, Mode=OneWay}"
                       Typography.Capitals="AllSmallCaps"/>
        </StackPanel>

        <!--Camera feedback image-->
        <Image x:Name="Img" 
               Stretch="Uniform"
               VerticalAlignment="Stretch"
               HorizontalAlignment="Stretch"/>

        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ctrl:WidgetTimer x:Name="ToothIndicator"
                              VerticalAlignment="Bottom"
                              HorizontalAlignment="Center"
                              Visibility="{x:Bind Vm.User, Converter={StaticResource NullToVisibilityConverter}}"
                              IsRunning="{x:Bind Vm.IsToothbrushing, Mode=OneWay}"/>
        </Canvas>
        
        <!--Info panel-->
        <StackPanel Margin="10,35"
                    x:Name="InfoUnknownPanel"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom" >
            <TextBlock Text=""
                       FontWeight="Light"
                       TextAlignment="Center"
                       HorizontalAlignment="Center"
                       TextWrapping="WrapWholeWords"
                       FontSize="60"/>
        </StackPanel>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".8*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width=".8*"/>
            </Grid.ColumnDefinitions>
            <!--Profile panel-->
            <StackPanel VerticalAlignment="Bottom"
                    Orientation="Horizontal"
                    Margin="20,0,0,20"
                    HorizontalAlignment="Stretch"
                    Visibility="{x:Bind Vm.IsConnected, Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}">
                <Grid x:Name="UserPicture" RenderTransformOrigin="0.5,0.5">
                    <interactivity:Interaction.Behaviors>
                        <core:DataTriggerBehavior Binding="{Binding IsConnected, Mode=OneWay}" Value="true">
                            <media:ControlStoryboardAction Storyboard="{StaticResource UserPictureSb}"/>
                        </core:DataTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                    <Grid.RenderTransform>
                        <CompositeTransform/>
                    </Grid.RenderTransform>

                    <Ellipse Height="90" Width="90"
                     Stroke="{StaticResource AccentBrush}"
                     StrokeThickness="1"/>
                    <Ellipse Height="70" Width="70">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{x:Bind Vm.User.Picture, Mode=OneWay, Converter={StaticResource ByteArrayToImageConverter}}" Stretch="UniformToFill"/>
                        </Ellipse.Fill>
                    </Ellipse>
                </Grid>

                <StackPanel Margin="10,35,0,35"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom" >
                    <StackPanel.ChildrenTransitions>
                        <TransitionCollection>
                            <PaneThemeTransition/>
                            <EdgeUIThemeTransition/>
                            <EntranceThemeTransition/>
                            <AddDeleteThemeTransition/>
                            <ContentThemeTransition/>
                        </TransitionCollection>
                    </StackPanel.ChildrenTransitions>

                    <Grid Width="Auto" Height="1" Background="White"/>

                    <TextBlock Text="{x:Bind Vm.User.Name, Mode=OneWay}"
                           FontWeight="ExtraLight"
                           HorizontalAlignment="Center"
                           TextWrapping="WrapWholeWords"
                           FontSize="25"/>

                    <TextBlock FontWeight="Light"
                                   Margin="0,0,3,0"
                                   Text="Dernière connexion :"
                                   HorizontalAlignment="Left"
                                   FontSize="15"
                                   FontStyle="Italic"/>
                    <TextBlock FontWeight="Light"
                                   Text="{Binding User.PreviousLoginDate, Mode=OneWay, Converter={StaticResource RelativeTimeConverter}}"
                                   HorizontalAlignment="Left"
                                   TextWrapping="WrapWholeWords"
                                   FontSize="15"
                                   FontStyle="Italic"/>

                    <TextBlock FontWeight="Light"
                           Text="{Binding User.FriendlyEmotion, Mode=OneWay}"
                           HorizontalAlignment="Left"
                           TextWrapping="WrapWholeWords"
                           FontSize="20"
                           Typography.Capitals="AllSmallCaps"/>

                </StackPanel>
            </StackPanel>

            <!--Loader-->
            <ctrl:IotLoader Grid.Column="1"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Center"
                            Margin="80"
                            Visibility="{x:Bind Vm.IsLoading, Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}"/>

            <Grid Grid.Column="2">
                <Image VerticalAlignment="Bottom"
                       HorizontalAlignment="Right"
                       Margin="10"
                       Source="../Assets/wifi.png"
                       Visibility="{x:Bind Vm.IsInternetAvailable, Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}, ConverterParameter=false}"   
                       Height="50"/>
                <Ellipse x:Name="InternetIndicator" 
                         VerticalAlignment="Bottom"
                         HorizontalAlignment="Right"
                         Margin="12"
                         Fill="DarkRed"
                         Stroke="Black"
                         StrokeThickness="2"
                         Visibility="{x:Bind Vm.IsInternetAvailable, Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}, ConverterParameter=false}"   
                         Height="20"
                         Width="20">
                    <interactivity:Interaction.Behaviors>
                        <core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=InternetIndicator}" Value="Visible">
                            <media:ControlStoryboardAction Storyboard="{StaticResource InternetIndicatorFadeSb}" ControlStoryboardOption="Play" />
                        </core:DataTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Ellipse>
            </Grid>
        </Grid>

        <!--Actions panel-->
        <StackPanel x:Name="ActionPanel" VerticalAlignment="Bottom">

            <!--Create & Detect buttons-->
            <StackPanel Orientation="Horizontal">
                <Button Margin="10" Command="{x:Bind Vm.ActionNavigateTo}" CommandParameter="Settings">
                    <TextBlock Text="&#xE115;" FontFamily="Segoe MDL2 Assets"/>
                </Button>
            </StackPanel>

        </StackPanel>

    </Grid>
</Page>

